import { ClassOptions } from '../type/ClassOptions';
/**
 * Utility class to serialize and deserialize objects
 */
export declare class Serializer {
    /**
     * Deserialize a property based on it's type.
     * @see [[SerializeProperty]], [[PropertyOptions.type]]
     * @param options - A set of options to use when deserializing this property.
     * @param value - The object to deserialize.
     * @returns {any} - The deserialized object.
     */
    private static deserializeItem(options, value);
    /**
     * Serialize a property based on it's type.
     * @see [[SerializeProperty]], [[PropertyOptions.type]]
     * @param options - A set of options to use when serializing this property.
     * @param value - The object to serialize.
     * @returns {Object} - The serialized object.
     */
    private static serializeItem(options, value);
    /**
     * Serialize a class instance.
     * @see [[Serialize]], [[ClassOptions]]
     * @param target - Class type.
     * @param context - Instance to serialize.
     * @param classOptions - Class serialization options.
     * @returns {Object} - The serialized object.
     */
    static serialize(target: any, context: Object, classOptions: ClassOptions): Object;
    /**
     * Deserialize a class instance.
     * @see [[Serialize]], [[ClassOptions]]
     * @param target - Class type.
     * @param context - Instance to deserialize.
     * @param jsonObject - Object to deserialize.
     * @param classOptions - Class deserialization options.
     */
    static deserialize(target: any, context: Object, jsonObject: Object, classOptions?: ClassOptions): void;
}
